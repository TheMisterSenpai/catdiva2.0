import discord
from discord.ext import commands
from discord.utils import get
from discord.ext.commands import Bot 

import json
import random
import asyncio
import requests
import datetime

class game(commands.Cog):

    def __init__(self, client):
        self.client = client
        self.cog_name = ["–∏–≥—Ä—ã"]
#
#–í—Å–µ –∏–≥—Ä—ã –±—ã–ª–∏ —Å–ø–∏–∑–∂–µ–Ω—ã
#https://github.com/AlekseyZz/Flags-mini-game-discord.py-
#https://github.com/LEv145/AmITegoDevBot/blob/master/Modules/fun.py
#
    @commands.Cog.listener()
    async def on_ready(self):
        print('[]–∏–≥—Ä—ã –±—ã–ª –∑–∞–ø—É—â–∏–Ω[]')

    @commands.command(
        aliases=['–º–æ–Ω–µ—Ç–∫–∞', '–æ—Ä–µ–ª_—Ä–µ—à–∫–∞','–æ_—Ä','–æ—Ä—ë–ª_—Ä–µ—à–∫–∞'],
        description='–ë–æ—Ç –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É',
        usage='–º–æ–Ω–µ—Ç–∫–∞'
    )
    async def o_r(self, ctx):
        robot = ["–æ—Ä—ë–ª", "—Ä–µ—à–∫–∞"]
        robot_choice = random.choice(robot)
                                   
        emb = discord.Embed(title="–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞", colour=discord.Colour.red(), timestamp=ctx.message.created_at)
        emb.set_author(name="‚†Ä", icon_url="https://www.iconpacks.net/icons/2/free-dollar-coin-icon-2139-thumb.png")
        emb.set_footer(text='–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
                                   
        if robot_choice == "–æ—Ä—ë–ª":
            emb.add_field(name="–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç–∫—É....", value="**–û—Ä—ë–ª**")

        if robot_choice == "—Ä–µ—à–∫–∞":
            emb.add_field(name="–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç–∫—É....", value="**–†–µ—à–∫–∞**")

        await ctx.send(embed=emb)
                                   

    @commands.command(
        aliases=["–∫–Ω–±", "–∫–∞–º–µ–Ω—å_–Ω–æ–∂–Ω–∏—Ü—ã_–±—É–º–∞–≥–∞"],
        description='–ò–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞',
        usage='–∫–Ω–± <–∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞>'
    )
    async def rsp(self, ctx, mess):
        robot = ['–ö–∞–º–µ–Ω—å', '–ù–æ–∂–Ω–∏—Ü—ã', '–ë—É–º–∞–≥–∞']
        stone_list = ["stone", "–∫–∞–º–µ–Ω—å","–∫"]
        paper_list = ["paper", "–±—É–º–∞–≥–∞", "–±"]
        scissors_list = ["scissors", "–Ω–æ–∂–Ω–∏—Ü—ã","–Ω"]  
                                   
        out = {"icon": None, "value": None, "img": None}
                                   
        robot_choice = random.choice(robot)  
                                   
        win_list = ["–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!","–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ :—Å", "–ù–∏—á—å—è!"]
            
        # Embed
        emb = discord.Embed(title=robot_choice, colour=discord.Colour.red(), timestamp=ctx.message.created_at)
                                   
        if mess.lower() in stone_list:       
            if robot_choice == '–ù–æ–∂–Ω–∏—Ü—ã':
                win = win_list[0]
                out["icon"] = "‚úÇ"
            elif robot_choice == '–ë—É–º–∞–≥–∞':
                win = win_list[1]
                out["icon"] = "üßª"
            else:
                win = win_list[2]
                out["icon"] = "ü•î"

        elif mess.lower() in paper_list:
            if robot_choice == '–ö–∞–º–µ–Ω—å':
                win = win_list[0]
                out["icon"] = "ü•î"     
            elif robot_choice == '–ù–æ–∂–Ω–∏—Ü—ã':
                win = win_list[1]
                out["icon"] = "‚úÇ"             
            else:
                win = win_list[2]
                out["icon"] = "üßª"               

        elif mess.lower() in scissors_list:
            if robot_choice == '–ë—É–º–∞–≥–∞':
                win = win_list[0]
                out["icon"] = "üßª"               
            elif robot_choice == '–ö–∞–º–µ–Ω—å':
                win = win_list[1]
                out["icon"] = "ü•î"                
            else:
                win = win_list[2]  
                out["icon"] = "‚úÇ"     
        else:
            await ctx.send("–û—à–∏–±–∫–∞!")
            return
                
        if win == "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!":
            out["img"] = "https://im0-tub-ru.yandex.net/i?id=12af96d2422023b2e8c0854c6960d229&n=13&exp=1"
        elif win == "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ :—Å":
            out["img"] = "https://thumbs.dreamstime.com/b/%D0%BF%D0%BE%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-87995106.jpg"
        else:
            out["img"] = "https://avatanplus.com/files/resources/original/574454ca56620154e2eb3672.png"
                                   
        emb.add_field(name=out["icon"], value=win)
        emb.set_author(name="‚†Ä",
        icon_url=out["img"])
        emb.set_footer(icon_url=ctx.author.avatar_url)
        await ctx.send(embed=emb)

    @commands.command(
        aliases=["—Ñ–ª–∞–≥–∏", "flags"],
        description="–°—ã–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —Ñ–ª–∞–≥–æ–≤ —Å—Ç—Ä–∞–Ω",
        usage="—Ñ–ª–∞–≥–∏"
    ) # —Å–æ–∑–¥–∞—ë–º –∫–æ–º–∞–Ω–¥—É
    async def _—Ñ–ª–∞–≥–∏(self, ctx): # —Ñ—É–Ω–∫—Ü–∏—é
        event_members = {} # —Å–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å, –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—Ç—å –±–∞–ª–ª—ã –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–≥—Ä—ã
        with open('./Data/DataBase/flags.json','r',encoding='utf8') as f: # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π utf8, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –æ–∫
            flags = json.load(f) # –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
            count = 1 # –ø–æ–¥—Å—á—ë—Ç —Ä–∞—É–Ω–¥–æ–≤
            flags_list = [] # —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å–ø–∏—Å–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–ª–∞–≥–æ–≤, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤ –≤ –∏–≥—Ä–µ
            while count <= 10:# –≤—Å–µ–≥–æ 10 —Ä–∞—É–Ω–¥–æ–≤, –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
                otvet = random.choice(flags['–§–ª–∞–≥–∏']) # –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–∫–∏–Ω–µ—Ç –±–æ—Ç –∏ –±—É–¥–µ—Ç –æ–∂–∏–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ –∫ –Ω–µ–º—É (–≤—Å—ë –∏–∑ —Ñ–∞–π–ª–∞ flags.json)
                if otvet in flags_list: # –ø—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç —Ñ–ª–∞–≥ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –Ω–µ—Ç
                    pass
                elif otvet not in flags_list: # –ø—Ä–æ–≤–µ—Ä–∫–∞, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è, –∫–æ–≥–¥–∞ —Ñ–ª–∞–≥–∞ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç
                    flags_list.append(otvet) # –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–ª–∞–≥ –≤ —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤
                    e = discord.Embed(title = f"–§–ª–∞–≥ {count}") # —Å–æ–∑–¥–∞—ë–º —ç–º–±–µ–¥, —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–§–ª–∞–≥ ‚Ññ", –Ω–∞ –º–µ—Å—Ç–µ –Ω–æ–º–µ—Ä–∞ –±—É–¥–µ—Ç —á–∏—Å–ª–æ —Ä–∞—É–Ω–¥–∞
                    e.set_image(url = otvet['url']) # —Å—Ç–∞–≤–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–∑—è–≤ —Å—Å—ã–ª–∫—É –∏–∑ —Ñ–∞–π–ª–∞ flags.json
                    await ctx.send(embed = e) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥
                    def check(m):
                        return m.content.lower() == otvet['answer'].lower() and m.channel == ctx.channel

                    msg = await self.client.wait_for('message', check=check) # –æ–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞
                    if str(msg.author.id) not in event_members: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, –µ—Å—Ç—å –ª–∏ –∞–≤—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ –≤ –Ω–∞—à–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ä–∞–Ω–µ–µ —Å–ª–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –∑–∞–Ω–æ—Å–∏—Ç –∏ –¥–∞—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ 1
                        event_members[str(msg.author.id)] = {} # –∑–∞–Ω–æ—Å–∏–º –≤ —Å–ª–æ–≤–∞—Ä—å
                        event_members[str(msg.author.id)]["score"] = 1 # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞–¥–∞—ë–º
                    elif str(msg.author.id) in event_members: # –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ —É–∂–µ –µ—Å—Ç—å –≤ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ - —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞
                        event_members[str(msg.author.id)]["score"] += 1 # –¥–æ–±–∞–≤–ª—è–µ—Ç 1 –æ—á–∫–æ
                    em = discord.Embed(title = "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!") # —Å–æ–∑–¥–∞—ë–º —ç–º–±–µ–¥, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º —á—Ç–æ –±—ã–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    em.add_field(name = "–û—Ç–≤–µ—Ç–∏–ª:", value = f"{msg.author.mention}") # –∫—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª
                    em.add_field(name = "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:",value = f"{otvet['answer']}") # –∫–∞–∫–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    await ctx.channel.send(embed = em) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
                    count = count + 1 # —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥
                    await asyncio.sleep(1) # –∂–¥—ë–º, —á—Ç–æ–±—ã –≤—Å—ë —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ –Ω–µ –±—ã–ª–æ
                    if count == 11: # –µ—Å–ª–∏ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π 11 —Ä–∞—É–Ω–¥ (–∫–æ–Ω–µ—Ü –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) —Ç–æ —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
                        e = discord.Embed(title = "–ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!", description = f"–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:") # —Å–æ–∑–¥–∞—ë—Ç —ç–º–±–µ–¥ —Å —Ç–∞–±–ª–∏—Ü–æ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∏ –∏—Ö –±–∞–ª–ª–∞–º–∏
                        leaders = sorted(event_members, key=lambda score: event_members[score]['score'], reverse=True) # —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É score (–æ—á–∫–∏)
                        position = 1 # –Ω–∞—á–∏–Ω–∞–µ–º —Å 1 —á–µ–ª–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
                        for leader in leaders: # —Å–æ–∑–¥–∞—ë–º —Ü–∏–∫–ª –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —Å–ª–æ–≤–∞—Ä—è
                            leader = self.client.get_user(int(leaders[position-1])) # –ø–æ–ª—É—á–∞–µ–º —á–µ–ª–æ–≤–µ–∫–∞
                            leader_score = event_members[str(leader.id)]['score'] # –ø–æ–ª—É—á–∞–µ–º –æ—á–∫–∏ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
                            e.add_field(name=f"{position} –º–µ—Å—Ç–æ:", value=f"{leader.mention} | –æ—á–∫–∏: **{leader_score}**",inline=False) # –∑–∞–Ω–æ—Å–∏–º –≤ –µ–≥–æ –Ω–∞—à—É —Ç–∞–±–ª–∏—Ü—É
                            position += 1 # —Å—Ç—Ä–æ—á–∫–∞, —á—Ç–æ–±—ã –¥–∞–ª–µ–µ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –≤—Å–µ—Ö
                        await ctx.send(embed = e) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ –æ–±—ä—è–≤–ª—è—è –∫–æ–Ω–µ—Ü
                        return # –∫–æ–Ω–µ—Ü, —Ü–µ–Ω–æ–∫!       

def setup(client):
    client.add_cog(game(client))
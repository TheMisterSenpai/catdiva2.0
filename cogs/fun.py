import discord
from discord.ext import commands
from discord.utils import get

import wikipedia
from random import randint, choice
import asyncio
import catdiva
import datetime
import random 
from datetime import timedelta

–∑–∞—Å—Ç–∞–≤–∫–∞1 = 'https://media1.tenor.com/images/cc69621982e3b2af8d6840c0ded9b81a/tenor.gif?itemid=14496292'
–∑–∞—Å—Ç–∞–≤–∫–∞2 = 'https://avatars.mds.yandex.net/get-zen_doc/1110951/pub_5d48f6b6fc69ab00ac290316_5d4905f9bf50d500ae427c3f/orig'
–∑–∞—Å—Ç–∞–≤–∫–∞3 = 'https://i.gifer.com/LHkW.gif'
–∑–∞—Å—Ç–∞–≤–∫–∞4 = 'https://i.gifer.com/N8oR.gif'
–∑–∞—Å—Ç–∞–≤–∫–∞5 = 'https://i.gifer.com/XiPu.gif'
–∑–∞—Å—Ç–∞–≤–∫–∞6 = 'https://media.tenor.com/images/98637699e8810ed22c9879be997affe9/tenor.gif'
–∑–∞—Å—Ç–∞–≤–∫–∞7 = 'https://media.tenor.com/images/65d17e29caf114577bd9f3abce398e0d/tenor.gif'


class fun(commands.Cog):
    def __init__(self, client):
        self.client = client
        self.cog_name= ["–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ"]

    @commands.Cog.listener()
    async def on_ready(self):
        print('[]–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –±—ã–ª –∑–∞–ø—É—â–∏–Ω[]')
        
    @commands.command(
        aliases=['–≤–∏–∫–∏', 'wiki'],
        description='—É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –≤–∏–∫–∏',
        usage='wiki <–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è>'
    )
    async def _wiki(self, ctx, *, text):
        wikipedia.set_lang("ru")
        new_page = wikipedia.page(text)
        summ = wikipedia.summary(text)
        emb = discord.Embed(
            title= new_page.title,
            description= summ,
            color = 0x00ffff
         )
        emb.set_author(name= '–ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç—É—Ç! –ö–ª–∏–∫–∞–π!', url= new_page.url, icon_url= 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/1200px-Wikipedia-logo-v2.svg.png')

        await ctx.send(embed=emb)

    @_wiki.error
    async def _wiki_error(self, ctx, error):
        if isinstance( error, commands.errors.MissingRequiredArgument ):
            await ctx.message.delete()
            emb = discord.Embed()
            emb.add_field( name = ':x: –í–∏–∫–∏:', value = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: **–≤–∏–∫–∏** <—Ç–µ–∫—Å—Ç>' )
            await ctx.send( embed = emb )    

    @commands.command(
        aliases = ['—Ö–µ–Ω—Ç', 'hentai'],
        description='–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ gif',
        usage='hentai'
    )
    async def _—Ö–µ–Ω—Ç–∞–π(self, ctx):
        if ctx.channel.is_nsfw():
            r = ['feet', 'yuri', 'trap', 'futanari', 'hololewd', 'lewdkemo',
            'solog', 'feetg', 'cum', 'erokemo', 'les', 'wallpaper', 'lewdk',
            'ngif', 'tickle', 'lewd', 'feed', 'gecg', 'eroyuri', 'eron',
            'cum_jpg', 'bj', 'nsfw_neko_gif', 'solo', 'kemonomimi', 'nsfw_avatar',
            'gasm', 'poke', 'anal', 'slap', 'hentai', 'avatar', 'erofeet', 'holo',
            'keta', 'blowjob', 'pussy', 'tits', 'holoero', 'lizard', 'pussy_jpg',
            'pwankg', 'classic', 'kuni', 'waifu', 'pat', '8ball', 'kiss', 'femdom',
            'neko', 'spank', 'cuddle', 'erok', 'fox_girl', 'boobs', 'random_hentai_gif',
            'smallboobs', 'hug', 'ero', 'smug', 'goose', 'baka', 'woof'
		    ]
            rnek = catdiva.img(random.choice(r))
            emb = discord.Embed(color = discord.Color.red())
            emb.set_image(url = rnek)
            await ctx.send(embed = emb)
        else:
            msg = await ctx.send(embed = discord.Embed(description='–ù–µ –¥—É–º–∞—é, —á—Ç–æ —ç—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–∞–Ω–∞–ª –¥–ª—è —Ç–∞–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...', color=discord.Color.orange()))
            await ctx.message.add_reaction('üîû')
            await asyncio.sleep(5)
            await msg.delete()

    @_—Ö–µ–Ω—Ç–∞–π.error
    async def _—Ö–µ–Ω—Ç–∞–π_error( self, ctx, error ):
        if isinstance( error, commands.errors.CommandInvokeError ):
            emb = discord.Embed(colour = discord.Color.red())
            emb.add_field( name = '–û—à–∏–±–∫–∞:', value = '‚ùóÔ∏è –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞: —Ç–æ –∑–Ω–∞—á–∏—Ç —É –±–æ—Ç–∞ –Ω–µ—Ç—É –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏–ª–∏ –ø—Ä–∞–≤–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–µ–∞–∫—Ü–∏–π' ) 
            await ctx.send( embed = emb)
            
    @commands.command(
        aliases=['—é–∑–µ—Ä–∏–Ω—Ñ–æ', '—é–∑–µ—Ä', 'userinfo'],
        description='—É–∑–Ω–∞—Ç—å –æ —á–µ–ª–æ–≤–µ–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
        usage='userinfo <@–Ω–∏–∫>'
    )
    async def _userinfo(self, ctx, member: discord.Member):
        roles = member.roles
        role_list = ""
        for role in roles:
            role_list += f"<@&{role.id}> "
        emb = discord.Embed(title=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {member}', colour = 0x179c87)
        emb.set_thumbnail(url=member.avatar_url)
        emb.add_field(name='ID', value=member.id)
        emb.add_field(name='–ò–º—è', value=member.name)
        emb.add_field(name='–í—ã—Å—à–∞—è —Ä–æ–ª—å', value=member.top_role)
        emb.add_field(name='–î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–æ—Ä', value=member.discriminator)
        emb.add_field(name='–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É', value=member.joined_at.strftime('%Y.%m.%d \n %H:%M:%S'))
        emb.add_field(name='–ü—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ Discord', value=member.created_at.strftime("%Y.%m.%d %H:%M:%S"))
        emb.add_field(name='–†–æ–ª–∏', value=role_list)
        emb.set_footer(text='–í—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
        await ctx.send(embed = emb)

    @_userinfo.error
    async def _userinfo_error(self, ctx, error):
        if isinstance(error, commands.BadArgument):
            emb = discord.Embed(colour = discord.Color.red())
            emb.add_field( name = ':x: –Æ–∑–µ—Ä–∏–Ω—Ñ–æ:', value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', inline = False)
            await ctx.send( embed = emb )
 
        if isinstance( error, commands.errors.MissingRequiredArgument ):
            emb = discord.Embed()
            emb.add_field( name = ':x: –Æ–∑–µ—Ä–∏–Ω—Ñ–æ:', value = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: `—é–∑–µ—Ä–∏–Ω—Ñ–æ [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] `' )
            await ctx.send( embed = emb)    

    @commands.command( 
        aliases=['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', 'send_l'],
        description='–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
        usage='send_l <@–Ω–∏–∫>'
    )
    async def _send_l( self, ctx, member: discord.Member ):
	    await member.send(f'‚úâÔ∏è{ctx.author.name} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è {member.mention}‚úâÔ∏è')#–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ 
	    await ctx.channel.purge( limit = 1)

    @_send_l.error
    async def _send_l_error(self, ctx, error):
        if isinstance(error, commands.BadArgument):
            emb = discord.Embed(colour = discord.Color.red())
            emb.add_field( name = ':x: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:', value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', inline = False)
            await ctx.send( embed = emb )
 
        if isinstance( error, commands.errors.MissingRequiredArgument ):
            emb = discord.Embed()
            emb.add_field( name = ':x: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:', value = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: `–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] `' )
            await ctx.send( embed = emb)    

    @commands.command(
        aliases=['–Ω–æ–º–µ—Ä', '–Ω–æ–º–µ—Ä–∏–Ω—Ñ–æ', 'phone_info'],
        description='–ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–º–µ—Ä–µ',
        usage='phone_info <+7 –Ω–æ–º–µ—Ä>'
    )
    async def _phone_info( self, ctx, arg ):
	    response = requests.get( f'https://htmlweb.ru/geo/api.php?json&telcod={ arg }' )

	    user_country = response.json()[ 'country' ][ 'english' ]
	    user_id = response.json()[ 'country' ][ 'id' ]
	    user_location = response.json()[ 'country' ][ 'location' ]
	    user_city = response.json()[ 'capital' ][ 'english' ]
	    user_width = response.json()[ 'capital' ][ 'latitude' ]
	    user_lenth = response.json()[ 'capital' ][ 'longitude' ]
	    user_post = response.json()[ 'capital' ][ 'post' ]
	    user_oper = response.json()[ '0' ][ 'oper' ]

	    global all_info
	    all_info = f'<INFO>\nCountry : { user_country }\nID : { user_id }\nLocation : { user_location }\nCity : { user_city }\nLatitude : { user_width }\nLongitude : { user_lenth }\nIndex post : { user_post }\nOperator : { user_oper }'

	    await ctx.author.send( all_info )
	    await ctx.channel.purge( limit = 1)
 

    @_phone_info.error
    async def _phone_info_error( self, ctx, error ):
        if isinstance( error, commands.errors.CommandInvokeError ):
            emb = discord.Embed(colour = discord.Color.red())
            emb.add_field( name = '–û—à–∏–±–∫–∞:', value = '‚ùóÔ∏è –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞: —Ç–æ –∑–Ω–∞—á–∏—Ç —É –±–æ—Ç–∞ –Ω–µ—Ç—É –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏–ª–∏ –ø—Ä–∞–≤–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–µ–∞–∫—Ü–∏–π' ) 
            await ctx.send( embed = emb) 
 
        if isinstance( error, commands.errors.MissingRequiredArgument ):
            emb = discord.Embed()
            emb.add_field( name = ':x: –ù–æ–º–µ—Ä–∏–Ω—Ñ–æ:', value = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: `–Ω–æ–º–µ—Ä–∏–Ω—Ñ–æ +7... `' )
            await ctx.send( embed = emb)        
          
    @commands.command(
        aliases=['achivment', '–∞—á–∏–≤–∫–∞'],
        description ='—Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –∞—á–∏–≤–∫—É –∏–∑ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–∞',
        usage='–∞—á–∏–≤–∫–∞ <—Ç–µ–∫—Å—Ç> (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ)'
    )
    async def ach(self, ctx, *, text=None):
        if text is None:
            embed = discord.Embed(title='–û—à–∏–±–∫–∞', description=f'–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç `ach <—Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª.—è–∑—ã–∫–µ>`', color=discord.Color.red())
            await ctx.send(embed=embed)
        else:
            a = random.randint(1, 40)
            done = text.replace(' ', '+')
            link = f'https://minecraftskinstealer.com/achievement/{a}/Achievement+Get%21/{done}'
            embed = discord.Embed(title='–ü–æ–ª—É—á–µ–Ω–æ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!', color=discord.Color.green())
            embed.set_image(url=link)
            await ctx.send(embed=embed)

    @commands.command(
        aliases = ['–∑–∞—Å—Ç–∞–≤–∫–∞'],
        description = '—Å–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç –∑–∞—Å—Ç–∞–≤–∫—É –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ–º–æ–≤',
        usage = '–∑–∞—Å—Ç–∞–≤–∫–∞'
    )
    @commands.cooldown(1, per = 10, type = discord.ext.commands.BucketType.guild )
    async def screensaver(self, ctx):

        emb = discord.Embed(title = f'**–ó–∞—Å—Ç–∞–≤–∫–∞**', color=0xffc0cb)
        emb.set_image(url = random.choice([–∑–∞—Å—Ç–∞–≤–∫–∞1, –∑–∞—Å—Ç–∞–≤–∫–∞2, –∑–∞—Å—Ç–∞–≤–∫–∞3, –∑–∞—Å—Ç–∞–≤–∫–∞4, –∑–∞—Å—Ç–∞–≤–∫–∞5, –∑–∞—Å—Ç–∞–≤–∫–∞6, –∑–∞—Å—Ç–∞–≤–∫–∞7])) 
        emb.set_footer(text=f'–í—ã–∑–≤–∞–Ω–æ: {ctx.message.author}',icon_url=ctx.message.author.avatar_url) 
        await ctx.send(embed=emb)   

    @screensaver.error
    async def screensaver_error(self, ctx, error):
        if isinstance( error, commands.CommandOnCooldown):
            emb = discord.Embed(colour = discord.Color.red())
            emb.add_field( name = ':x: –ó–∞—Å—Ç–∞–≤–∫–∞:', value = '–ü–æ–¥–æ–∂–¥–∏—Ç–µ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º!' )
            await ctx.send( embed = emb)        
            
def setup(client):
    client.add_cog(fun(client))     